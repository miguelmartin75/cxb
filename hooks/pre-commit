#!/bin/bash

# Pre-commit hook to check code formatting
# To install: cp hooks/pre-commit .git/hooks/pre-commit && chmod +x .git/hooks/pre-commit

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}Running pre-commit format check...${NC}"

# Check if clang-format is available
if ! command -v clang-format &> /dev/null; then
    echo -e "${RED}Error: clang-format is not installed${NC}"
    echo "Please install clang-format to use this pre-commit hook"
    exit 1
fi

# Get list of staged C/C++ files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(cpp|hpp|h|c)$' | grep -v "^prototype/" || true)

if [ -z "$STAGED_FILES" ]; then
    echo -e "${GREEN}No C/C++ files to check${NC}"
    exit 0
fi

echo "Checking formatting for staged files:"
echo "$STAGED_FILES"

# Check formatting
NEEDS_FORMATTING=false
while IFS= read -r file; do
    if [ -f "$file" ]; then
        if ! clang-format --dry-run --Werror "$file" 2>/dev/null; then
            echo -e "${RED}❌ $file needs formatting${NC}"
            NEEDS_FORMATTING=true
        else
            echo -e "${GREEN}✅ $file is properly formatted${NC}"
        fi
    fi
done <<< "$STAGED_FILES"

if [ "$NEEDS_FORMATTING" = true ]; then
    echo
    echo -e "${RED}Commit aborted due to formatting issues.${NC}"
    echo -e "${YELLOW}To fix formatting, run:${NC}"
    echo "  ./scripts/format.sh"
    echo
    echo "Then add the formatted files and commit again:"
    echo "  git add -u"
    echo "  git commit"
    echo
    echo "Or to skip this check (not recommended):"
    echo "  git commit --no-verify"
    exit 1
fi

echo -e "${GREEN}All staged files are properly formatted!${NC}"
exit 0