name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  format-check:
    name: Check Code Formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install clang-format
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-format
    
    - name: Check formatting
      run: |
        find . -name "*.cpp" -o -name "*.h" -o -name "*.hpp" -o -name "*.c" | \
        grep -v "./build" | grep -v "./.cache" | grep -v "./prototype" | \
        xargs clang-format --dry-run --Werror

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Debug, Release]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential
    
    - name: Install Catch2
      run: |
        git clone https://github.com/catchorg/Catch2.git
        cd Catch2
        git checkout v3.4.0
        cmake -Bbuild -H. -DBUILD_TESTING=OFF -DCMAKE_BUILD_TYPE=Release
        sudo cmake --build build/ --target install
    
    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
    
    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}
    
    - name: Run tests
      working-directory: build
      run: |
        # First try running via CTest
        if command -v ctest &> /dev/null; then
          ctest --output-on-failure --verbose
        else
          # Fallback to running the test executable directly
          ./test_seq
        fi