name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  format-check:
    name: Check Code Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install clang-format 20
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          echo "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-20 main" | sudo tee /etc/apt/sources.list.d/llvm.list
          sudo apt-get update
          sudo apt-get install -y clang-format-20
          sudo ln -sf /usr/bin/clang-format-20 /usr/bin/clang-format

      - name: Check formatting
        run: |
          chmod +x scripts/format.sh
          ./scripts/format.sh --check

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Debug, Release]
        compiler: [gcc, clang]

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential
          if [ "${{ matrix.compiler }}" = "clang" ]; then
            wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
            echo "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-20 main" | sudo tee /etc/apt/sources.list.d/llvm.list
            sudo apt-get update
            sudo apt-get install -y clang-20
          else
            # Install GCC for C11 support
            sudo apt-get install -y software-properties-common
            sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
            sudo apt-get update
            sudo apt-get install -y gcc-12 g++-12
          fi

      - name: Install Catch2
        run: |
          git clone https://github.com/catchorg/Catch2.git
          cd Catch2
          git checkout v3.4.0
          cmake -Bbuild -H. -DBUILD_TESTING=OFF -DCMAKE_BUILD_TYPE=Release
          sudo cmake --build build/ --target install

      - name: Configure CMake
        run: |
          if [ "${{ matrix.compiler }}" = "clang" ]; then
            export CC=clang-20
            export CXX=clang++-20
          else
            export CC=gcc-12
            export CXX=g++-12
          fi
          cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX

      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }}

      - name: Run tests
        working-directory: build
        run: |
          # First try running via CTest
          if command -v ctest &> /dev/null; then
            ctest --output-on-failure --verbose
          else
            # Fallback to running the test executable directly
            ./test_seq
          fi
